setopt autocd

# vim keybindings in shell
bindkey -v

## Env Vars
# TODO Move env vars to their own shell file
export WORKSPACE=${HOME}/workspace

# TODO Because you are now using chezmoi for dotfiles,
# either replace usage of AJ_CONFIG with XDG_CONFIG_HOME, or
# remove it entirely and rely on chezmoi templating
export AJ_CONFIG=${HOME}/workspace/dev

# homebrew is great but is actively hostile sometimes
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_INSTALL_CLEANUP=1

## Aliases
# TODO Move to their own file
alias g="git"
alias ll="ls -al"
alias cm="chezmoi"
alias edit="open"
alias k="kubectl"
alias t="terraform"
alias d="docker"

## Default Editor
if type zed &>/dev/null
then
  export EDITOR="zed --wait"
elif type code &>/dev/null
then
  export EDITOR="code --wait"
elif type vim &>/dev/null
then
  export EDITOR="vim"
fi

# Homebrew: The Missing Package Manager (https://brew.sh)
if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

# Atuin: Magical Shell History (https://atuin.sh)
if [[ -d $HOME/.atuin/bin ]] then
  # Add atuin to the path, and init shell plugin
  . "$HOME/.atuin/bin/env"
  eval "$(atuin init zsh)"
fi

# Antidote: the cure to slow zsh plugin management (https://antidote.sh)
source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh &>/dev/null && antidote load

# Starship: Cross-Shell Prompt (https://starship.rs/)
if [[ $(command -v starship) ]] then
  # You may still need to add this at the end of .zshrc for it to work
  eval "$(starship init zsh)"
fi

if [[ $(command -v thefuck) ]] then
  eval "$(thefuck --alias)"
fi

{{- if .dr }}
# TODO Why do I have this?
. "$HOME/.local/bin/env"

[ -f ~/.quantumrc ] && source ~/.quantumrc

# set up GPG, because I need to use it for the datarobot github org
export GPG_TTY=$(tty)
{{- end }}

if type pyenv &>/dev/null
then
  export PYENV_ROOT="$HOME/.pyenv"
  [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init - zsh)"
fi

# enable direnv shell integration
if type direnv &>/dev/null
then
  eval "$(direnv hook zsh)"
fi
